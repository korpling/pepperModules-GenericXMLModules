<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
  <artifactId>pepperModules-GenericXMLModulesModules</artifactId>
  <name>${project.groupId}.${project.artifactId}</name>
  <version>1.1.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <distributionManagement>
    <repository>
      <id>korpling</id>
      <name>korpling maven repo</name>
      <url>file:///srv/www/maven2/</url>
      <!-- <url>scpexe://korpling.german.hu-berlin.de/srv/www/maven2/</url>-->
    </repository>
  </distributionManagement>
  <repositories>
    <repository>
      <id>korpling</id>
      <name>korpling maven repo</name>
      <url>http://korpling.german.hu-berlin.de/maven2</url>
    </repository>
  </repositories>
  <!-- 	Declares this project to be an extension of the project pepper-parentModule. The parent project for instance contains all dependencies 
		necessary for using the SaltNPepper environment (all Pepper projects and all Salt projects).-->
  <parent>
    <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
    <artifactId>pepper-parentModule</artifactId>
    <version>1.1.4-SNAPSHOT</version>
  </parent>
  <description>This project provides an importer to map data from any xml to Salt.</description>
  <url>https://korpling.german.hu-berlin.de/p/projects/peppermodules-genericxmlmodules</url>
  <issueManagement>
  	<system>Redmine</system>
  	<url>https://korpling.german.hu-berlin.de/p/projects/peppermodules-genericxmlmodules/issues</url>
  </issueManagement>
  <ciManagement>
  	<system>Jenkins</system>
  	<url>https://korpling.german.hu-berlin.de/jenkins/</url>
  </ciManagement>
  <inceptionYear>2012</inceptionYear>
  <organization>
  	<name>Humboldt Univerity of Berlin, INRIA</name>
  </organization>
  <scm>
    <developerConnection>scm:svn:https://korpling.german.hu-berlin.de/svn/saltnpepper/PepperModules/GenericXMLModules/trunk</developerConnection>
    <url>scm:svn:https://korpling.german.hu-berlin.de/svn/saltnpepper/PepperModules/GenericXMLModules/</url>
  </scm>
 
  <dependencies>
    <!-- TODO /10/ ... put here all the dependencies you need, which are not already included in the parent project...-->
  </dependencies>
  <build>
    <plugins>
      <!-- start: Plugin for automatic releasing -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <tagBase>
           https://korpling.german.hu-berlin.de/svn/saltnpepper/PepperModules/GenericXMLModules/tags/
          </tagBase>
          <releaseProfiles>release</releaseProfiles>
          <goals>assembly:single deploy</goals>
        </configuration>
      </plugin>
      <!-- 	start: creation of bundle jar
			This plugIn creates a META-INF folder if not present and adds the entries into the MANIFEST.MF file required for OSGi. It
			also creates an OSGI-INF folder necessary for using service-components in OSGi.
	  -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.1.0</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <manifestLocation>${basedir}/META-INF</manifestLocation>
          <source>1.6</source>
          <target>1.6</target>
          <instructions>
            <Bundle-Name>${project.artifactId}</Bundle-Name>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId};singleton:=true</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
            <Service-Component>OSGI-INF/${component.descriptor.name}</Service-Component>
            <Include-Resource>{maven-resources}, LICENSE, NOTICE</Include-Resource>
            <!-- 	TODO /13/ 
            		In case of you want to add not mavenized 3rd party libraries, put the into the project structure 
            		under path RESOURCE_PATH and fullfill the following two entries. The alias RESOURCE_ALIAS can be any String
            		Don't forget to remove the <Include-Resource> tag above.
	            <Bundle-ClassPath>.,{maven-dependencies}, RESOURCE_ALIAS</Bundle-ClassPath> 
	            <Include-Resource>{maven-resources}, LICENSE, NOTICE, RESOURCE_ALIAS=RESOURCE_PATH</Include-Resource>
             -->
          </instructions>
        </configuration>
      </plugin>
      <!-- end: creation of bundle jar -->
    </plugins>
  </build>
</project>